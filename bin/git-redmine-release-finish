#!/bin/bash

source /usr/local/share/Git-Redmine-Suite/helpers/current_git_command
function help {
    echo "$CURRENT_GIT_COMMAND"
    exit 1
}

if [ -n "$HELP" ]
then
    help
fi

set -e

source /usr/local/share/Git-Redmine-Suite/helpers/redmine-checkconf
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-project
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-tasks
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-statuses
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-question

if ! git config "redmine.release.version" > /dev/null
then
    echo "Your have no release in progress"
    echo ""
    exit 1
fi

declare -a TASKS=($(git config redmine.release.tasks))

for TASK in ${TASKS[@]}
do
    PROJECT=$(redmine_get_project $TASK)
    if ! git config redmine.project.$PROJECT.finish.user.id.release > /dev/null
    then
        redmine_get_project_users "$PROJECT"
        exit 1
    fi

done

set +e
redmine_get_cf_conf
set -e

V=$(git config redmine.release.version)
BRNAME=$(git config redmine.release.branch)

Q="Finish release v$V"
if [ -n "$GIT_REDMINE_CHAIN_RELEASE_FINISH" ]
then
    echo "$Q ..."
else
    are_you_sure "$Q ?"
fi

git fetch -ap
git fetch --tags -p
git checkout devel
git merge origin/devel
git merge --no-ff "$BRNAME" -m "Merge $BRNAME"
git push origin devel
git checkout master
git merge origin/master
git merge --no-ff devel -m "Merge $BRNAME"
git tag -m "release v$V: ${TASKS[@]}" "v$V"
git push origin master
git push origin "tags/v$V"
git branch -d $BRNAME
git config --remove-section redmine.release

REMOTE_URL=$(git config remote.origin.url)
for TASK in ${TASKS[@]}
do
    echo "Update redmine status $TASK ..."
    PROJECT=$(redmine_get_project $TASK)
    RELEASE_FINISH_USER_ID=$(git config redmine.project.$PROJECT.finish.user.id.release)
    task=$TASK \
    status=$REDMINE_RELEASE_FINISH \
    assigned_to=$RELEASE_FINISH_USER_ID \
    git_release_id=$GIT_RELEASE_ID \
    git_release_val="v$V" \
    redmine_set_status
done


