#!/bin/bash

source /usr/local/share/Git-Redmine-Suite/helpers/current_git_command
function help {
    echo "$CURRENT_GIT_COMMAND TASK_NUMBER"
    exit 1
}

if [ "x$HELP" != "x" ]
then
    help
fi

set -e

source /usr/local/share/Git-Redmine-Suite/helpers/redmine-checkconf
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-statuses
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-title
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-project
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-tasks
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-question

TASK="$1"

if [ "x$TASK" == "x" ]
then
    help
fi

set +e

redmine_get_cf_conf

set -e

GIT_REPOS_URL=$(git config remote.origin.url)

set +e

PROJECT=$(redmine_get_project $TASK)
TASK_TITLE=$(git config redmine.task.$TASK.title)
BRNAME=$(git config redmine.task.$TASK.branch)

set -e

if [ "x$BRNAME" != "x" ]
then
    echo "Continue the task $TASK ..."
    echo ""
    echo "Updating redmine ..."
    task=$TASK \
    status=$REDMINE_TASK_IN_PROGRESS \
    assigned_to=$REDMINE_USER_ID \
    git_repos_id=$GIT_REPOS_ID \
    git_repos_url=$GIT_REPOS_URL \
    progress=90 \
    redmine_set_status
    echo ""
    echo "Checkout local branch $BRNAME ..."
    git fetch -ap
    git fetch --tags -p
    git checkout $BRNAME
    git config "redmine.task.current" "$TASK"
    git rebase origin/$BRNAME || cat <<__EOF__
Fix the conflict, and finish the rebase or remote branch

__EOF__

    cat <<__EOF__

To update your branch :
    git rebase origin/devel
    #fix conflict, then
    git push origin -f $BRNAME

__EOF__

    exit 0
fi


echo "Starting the task : "
extended_status=1 redmine_get_title $TASK
are_you_sure "Do you really want to start this task ?"

echo "Updating redmine status ..."

task=$TASK \
status=$REDMINE_TASK_IN_PROGRESS \
assigned_to=$REDMINE_USER_ID \
git_repos_id=$GIT_REPOS_ID \
git_repos_url=$GIT_REPOS_URL \
progress=10 \
redmine_set_status

TASK_TITLE=$(redmine_get_title $TASK)
SLUG_TITLE=$(/usr/local/share/Git-Redmine-Suite/helpers/slug --this "$TASK_TITLE")
BRNAME="redmine-$SLUG_TITLE"

echo "Creation local branch $BRNAME ..."

git fetch -ap
git fetch --tags -p
git checkout -b "$BRNAME" origin/devel
git config "redmine.task.current" "$TASK"
git config "redmine.task.$TASK.title" "$TASK_TITLE"
git config "redmine.task.$TASK.branch" "$BRNAME"
git config "redmine.task.$TASK.project" "$PROJECT"
git push origin -u $BRNAME || cat <<__EOF__
The remote branch $BRNAME already exist !
You have 2 choice. 

Or you take control of this branch :

    git push -fu origin "$BRNAME"

Or you get that branch and continue the devel :

    git reset --hard "origin/$BRNAME"
    git push -u origin "$BRNAME"

__EOF__
