#!/bin/bash

source /usr/local/share/Weborama-Git-Review/helpers/redmine-checkconf
source /usr/local/share/Weborama-Git-Review/helpers/redmine-statuses
source /usr/local/share/Weborama-Git-Review/helpers/redmine-title
source /usr/local/share/Weborama-Git-Review/helpers/redmine-project

set -e

function help {
    echo "git review start TASK_NUMBER PULL_REQUEST"
    exit 1
}

TASK="$1"
PR="$2"

if [ "x$TASK" == "x" ] || [ "x$PR" == "x" ]
then
    help
fi

TASK_TITLE=$(redmine_get_title $TASK)
SLUG_TITLE=$(/usr/local/share/Weborama-Git-Review/helpers/slug --this "$TASK_TITLE")
BRNAME="redmine-review-$SLUG_TITLE"
PROJECT=$(redmine_get_project $TASK)

echo "Starting the review of task #$TASK - PR:$PR ..."
echo "    * $TASK_TITLE"

set -x

git fetch -ap
git fetch --tags -p
git checkout devel
git checkout -b "$BRNAME" "$PR"
git config --add "redmine.review.$TASK.pr" "$PR"
git config --add "redmine.review.$TASK.title" "$TASK_TITLE"
git config --add "redmine.review.$TASK.branch" "$BRNAME"
git config --add "redmine.review.$TASK.project" "$PROJECT"

set +x
redmine_set_status $TASK $REDMINE_REVIEW_IN_PROGRESS $REDMINE_USER_ID

cat <<__EOF__

You can squash / rebase ... 
but please keep the name $BRNAME 
for your branch before further action with git review

To start a review (example):
    git rebase origin/devel
    git diff origin/devel..

__EOF__
