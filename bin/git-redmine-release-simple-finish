#!/bin/bash

source /usr/local/share/Git-Redmine-Suite/helpers/current_git_command
function help {
    echo "$CURRENT_GIT_COMMAND"
    exit 1
}

if [ "x$HELP" != "x" ]
then
    help
fi

set -e

source /usr/local/share/Git-Redmine-Suite/helpers/redmine-checkconf
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-project
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-tasks

if ! git config "redmine.release.simple.version" > /dev/null
then
    echo "Your have no release in progress"
    echo ""
    exit 1
fi

set +e
RELEASE_FINISH_USER_ID=$(git config redmine.project.$PROJECT.finish.user.id.task)
if [ "x$RELEASE_FINISH_USER_ID" == "x" ]
then
    redmine_get_project_users "$PROJECT"
    exit 1
fi
set -e

declare -a TASKS=($(git config redmine.release.simple.tasks))

for TASK in ${TASKS[@]}
do
    echo "Check redmine status $TASK ..."
    redmine_check_task "$TASK" "$REDMINE_RELEASE_TODO"
done

V=$(git config redmine.release.simple.version)
BRNAME=$(git config redmine.release.simple.branch)

echo "Finish release v$V ..."

set -x
git fetch -ap
git fetch --tags -p
git co devel
git merge origin/devel
git merge --no-ff "$BRNAME"
git push origin devel
git co master
git merge origin/master
git merge --no-ff "$BRNAME"
git tag -m "release v$V: $(echo ${TASKS[@]})" "v$V"
git push origin master
git push origin "tags/v$V"
git br -d $BRNAME
git config --remove-section redmine.release.simple
set +x

for TASK in ${TASKS[@]}
do
    echo "Update redmine status $TASK ..."
    redmine_set_status $TASK $REDMINE_RELEASE_FINISH $RELEASE_FINISH_USER_ID
done


