#!/bin/bash

source /usr/local/share/Git-Redmine-Suite/helpers/current_git_command
function help {
    echo "$CURRENT_GIT_COMMAND"
    exit 1
}

if [ "x$HELP" != "x" ]
then
    help
fi

set -e

source /usr/local/share/Git-Redmine-Suite/helpers/redmine-checkconf
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-statuses
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-tasks
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-question

set +e

TASK=$(git config redmine.review.current)

if [ "x$TASK" == "x" ]
then
    echo "You have not start any review !"
    exit 1
fi

set -e

TASK_TITLE=$(git config "redmine.review.$TASK.title")
BRNAME=$(git config "redmine.review.$TASK.branch")
PR=$(git config "redmine.review.$TASK.pr")

echo "Rejecting the review of task #$TASK - PR:$PR ..."
echo "    * $TASK_TITLE"
echo ""
are_you_sure
echo ""

git fetch -ap
git fetch --tags -p
git checkout devel
git merge origin/devel
git push origin :tags/"$PR"
git tag -d "$PR"
git branch -D "$BRNAME"
git config --remove-section "redmine.review.$TASK"
git config --unset "redmine.review.current"

echo ""
echo "Fetching last developer ..."
declare -a TASK_DEV=($(redmine_get_developers_id "$TASK"))

F=$(mktemp /tmp/redmine.XXXXXX)
echo "#Put your redmine message here" > "$F"
vim "$F"

echo ""
echo "Updating redmine status ..."
redmine_set_status "$TASK" "$REDMINE_TASK_TODO" "${TASK_DEV[0]}" "$(cat "$F")"
echo ""
unlink "$F"
