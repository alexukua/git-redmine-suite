#!/bin/bash

source /usr/local/share/Git-Redmine-Suite/helpers/current_git_command
function help {
    echo "$CURRENT_GIT_COMMAND"
    exit 1
}

if [ "x$HELP" != "x" ]
then
    help
fi

set -e

source /usr/local/share/Git-Redmine-Suite/helpers/redmine-checkconf
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-statuses
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-project
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-tasks
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-question

set +e

TASK=$(git config redmine.review.current)

if [ "x$TASK" == "x" ]
then
    echo "You have not start any review !"
    exit 1
fi

redmine_get_cf_conf

set -e

PROJECT=$(git config "redmine.review.$TASK.project")
TASK_TITLE=$(git config "redmine.review.$TASK.title")
BRNAME=$(git config "redmine.review.$TASK.branch")
PR=$(git config "redmine.review.$TASK.pr")

are_you_sure "Rejecting the review of #$TASK_TITLE - PR:$PR ?"

git fetch -ap
git fetch --tags -p
git checkout devel
git merge origin/devel
git push origin :tags/"$PR"
git tag -d "$PR"
git branch -D "$BRNAME"
git config --remove-section "redmine.review.$TASK"
git config --unset "redmine.review.current"

echo ""
echo "Fetching last developer ..."
declare -a TASK_DEV=($(redmine_get_developers_id "$TASK"))

F=$(mktemp /tmp/redmine.XXXXXX)
vim "$F"

echo ""
echo "Updating redmine status ..."
task=$TASK \
status=$REDMINE_TASK_TODO \
assigned_to=${TASK_DEV[0]} \
notes="This task has been rejected. Here the reasons :

$(cat "$F")
" \
git_pr_id=$GIT_PR_ID \
git_pr_val=" " \
redmine_set_status
echo ""
unlink "$F"
