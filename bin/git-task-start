#!/bin/bash

source /usr/local/share/Git-Redmine-Suite/helpers/redmine-checkconf
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-statuses
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-title
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-project

set -e

function help {
    echo "git task start TASK_NUMBER"
    exit 1
}

TASK="$1"

if [ "x$TASK" == "x" ]
then
    help
fi

set +e
TASK_TITLE=$(git config redmine.task.$TASK.title)
BRNAME=$(git config redmine.task.$TASK.branch)
set -e

if [ "x$BRNAME" != "x" ]
then
    echo "Continue the task $TASK ..."
    echo ""
    echo "Updating redmine status ..."
    set +x
    redmine_set_status $TASK $REDMINE_TASK_IN_PROGRESS $REDMINE_USER_ID
    echo "Checkout local branch $BRNAME ..."
    set -x
    git fetch -ap
    git fetch --tags -p
    git checkout $BRNAME
    git pull origin $BRNAME
    cat <<__EOF__

To update your branch :
    git rebase origin devel
    #fix conflict, then
    git push origin -f $BRNAME

__EOF__
    exit 0
fi

TASK_TITLE=$(redmine_get_title $TASK)
SLUG_TITLE=$(/usr/local/share/Git-Redmine-Suite/helpers/slug --this "$TASK_TITLE")
BRNAME="redmine-$SLUG_TITLE"
PROJECT=$(redmine_get_project $TASK)

echo "Starting the task #$TASK ..."
echo "    * $TASK_TITLE"
echo ""

echo "Updating redmine status ..."

set +x
redmine_set_status $TASK $REDMINE_TASK_IN_PROGRESS $REDMINE_USER_ID

echo "Creation local branch $BRNAME ..."

set -x

git fetch -ap
git fetch --tags -p
git checkout -b "$BRNAME" origin/devel
git config --add "redmine.task.$TASK.title" "$TASK_TITLE"
git config --add "redmine.task.$TASK.branch" "$BRNAME"
git config --add "redmine.task.$TASK.project" "$PROJECT"
set +x
git push origin -u $BRNAME || cat <<__EOF__
The remote branch $BRNAME already exist !
You have 2 choice. Or you take control of this branch :

    git push -fu origin "$BRNAME"

Or you get that branch and continue the devel :

    git reset --hard "origin/$BRNAME"
    git push -u origin "$BRNAME"

__EOF__
