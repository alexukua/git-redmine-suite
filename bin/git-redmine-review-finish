#!/bin/bash

source /usr/local/share/Git-Redmine-Suite/helpers/current_git_command
function help {
    echo "$CURRENT_GIT_COMMAND"
    exit 1
}

if [ "x$HELP" != "x" ]
then
    help
fi

set -e

source /usr/local/share/Git-Redmine-Suite/helpers/redmine-checkconf
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-statuses
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-project
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-tasks
source /usr/local/share/Git-Redmine-Suite/helpers/redmine-question

set +e

TASK=$(git config redmine.review.current)

if [ "x$TASK" == "x" ]
then
    echo "You have not start any review !"
    exit 1
fi

set -e

redmine_check_task "$TASK" "$REDMINE_REVIEW_IN_PROGRESS"

TASK_TITLE=$(git config "redmine.review.$TASK.title")
TASK_DEV=$(redmine_get_developers "$TASK")
PR=$(git config "redmine.review.$TASK.pr")
BRNAME=$(git config "redmine.review.$TASK.branch")
PROJECT=$(git config "redmine.review.$TASK.project")
CHANGELOG=$(get_change_log)

set +e
REVIEW_FINISH_USER_ID=$(git config redmine.project.$PROJECT.finish.user.id.review)
if [ "x$REVIEW_FINISH_USER_ID" == "x" ]
then
    redmine_get_project_users "$PROJECT"
    exit 1
fi
set -e

Q="Finishing the review of $TASK_TITLE - PR:$PR"
if [ "x$GIT_REDMINE_CHAIN_REVIEW_FINISH" == "x1" ]
then
    echo "$Q ..."
else
    are_you_sure "$Q ?"
fi

git fetch -ap
git fetch --tags -p
git checkout devel
git merge origin/devel
git merge --no-ff "$BRNAME" -m "Merge $BRNAME"
echo "    * $TASK_TITLE ($TASK_DEV)" > "$CHANGELOG".new
touch "$CHANGELOG"
cat "$CHANGELOG" >> "$CHANGELOG".new
mv "$CHANGELOG".new "$CHANGELOG"
vim "$CHANGELOG"
git add "$CHANGELOG"
git commit -m "reflect changes" "$CHANGELOG" || true
git push origin devel
git push origin :tags/"$PR"
git tag -d "$PR"
git branch -D "$BRNAME"
git config --remove-section "redmine.review.$TASK"
git config --unset "redmine.review.current"

echo ""
echo "Updating redmine status ..."
REMOTE_URL=$(git config remote.origin.url)
redmine_set_status $TASK $REDMINE_RELEASE_TODO $REVIEW_FINISH_USER_ID "
* REMOTE : $REMOTE_URL
* PR: $PR
"
echo ""

echo "Removing old pr ..."
for tag in $(git tag | grep pr-.*-redmine-.*-$TASK-)
do
    git push origin :tags/"$tag"
    git tag -d "$tag"
done

if [ "x$REVIEW_FINISH_USER_ID" == "x$REDMINE_USER_ID" ]
then
	if are_you_sure "You are the releaser of this task. Do you want to release now ?"
	then
		GIT_REDMINE_CHAIN_RELEASE_START=1 exec git redmine release simple start $TASK
	fi
fi
