#!/bin/bash

source /usr/local/share/Weborama-Git-Review/helpers/redmine-checkconf
source /usr/local/share/Weborama-Git-Review/helpers/redmine-statuses
source /usr/local/share/Weborama-Git-Review/helpers/redmine-project

set -e

function help {
    echo "git review finish TASK_NUMBER"
    exit 1
}

function get_change_log
{
    for i in Changes changes Changelog ChangeLog
    do
        [ -e "$i" ] && echo "$i" && break
    done
}

TASK="$1"

if [ "x$TASK" == "x" ]
then
    help
fi

TASK_TITLE=$(git config "redmine.review.$TASK.title")
PR=$(git config "redmine.review.$TASK.pr")
BRNAME=$(git config "redmine.review.$TASK.branch")
PROJECT=$(git config "redmine.review.$TASK.project")
CHANGELOG=$(get_change_log)

set +e
REVIEW_FINISH_USER_ID=$(git config redmine.project.$PROJECT.finish.user.id.review)
if [ "x$TASK_FINISH_USER_ID" == "x" ]
then
    redmine_get_project_users "$PROJECT"
    exit 1
fi

echo "Finishing the review of task #$TASK - PR:$PR ..."
echo "    * $TASK_TITLE"
echo ""

set -x
git fetch -ap
git fetch --tags -p
git checkout devel
git merge origin/devel
git merge --no-ff "$BRNAME"
git branch -D "$BRNAME"
echo "    $TASK_TITLE" > "$CHANGELOG".new
echo "" >> "$CHANGELOG".new
cat "$CHANGELOG" >> "$CHANGELOG".new
mv "$CHANGELOG".new "$CHANGELOG"
vim "$CHANGELOG"
git add "$CHANGELOG"
git commit -m "reflect changes" "$CHANGELOG"
git config --remove-section "redmine.review.$TASK"
git push origin devel
git push origin :tags/"$PR"
set +x
echo ""
echo "Updating redmine status ..."
redmine_set_status $TASK $REDMINE_REVIEW_FINISH $REVIEW_FINISH_USER_ID
echo ""
